Amazon RDS (Relational Database Service)
      Managed relational database service supporting multiple engines: MySQL, PostgreSQL, MariaDB, Oracle, and SQL Server.
      Multi-AZ Deployments: Ensures high availability with automatic failover.
      Read Replicas: Improve read performance by creating read-only copies of databases.
      Automated backups, snapshots, and manual backups for data recovery.
      Integration with IAM, CloudWatch, and KMS for enhanced security and monitoring.
RDS Custom
      Tailored for specialized workloads with specific configurations for Oracle and Microsoft SQL Server.
      Amazon Aurora
      High-performance relational database engine compatible with MySQL and PostgreSQL.
      Aurora Serverless: Scales automatically based on usage.
      Supports Global Databases for low-latency access across regions.
      Fast failover and replication features ensure high availability.
RDS Security
      Encrypts data at rest and in transit using KMS.
      VPC-based isolation for database instances.
      Supports IAM authentication and database firewalls.
RDS Proxy
      Improves database performance by pooling and sharing database connections.
      Ensures secure database access and integrates with AWS Secrets Manager.
Amazon ElastiCache
      Fully managed in-memory data store for caching.
      Supports Redis and Memcached.
      Used for low-latency data access and high-throughput applications.
      Supports multi-AZ with failover, backups, and enhanced security.
      Ports to Know
      RDS: Default database ports (e.g., MySQL: 3306, PostgreSQL: 5432, SQL Server: 1433).
      ElastiCache: Redis (6379), Memcached (11211).
DynamoDB
            Managed NoSQL key-value and document database.
            Features: Scalability, durability, global tables, and DynamoDB Streams.
            Use cases: E-commerce, gaming leaderboards, IoT applications.
DynamoDB DAX 
            Dynamo DB acclerator across 3 AZ
            Seamless caching for DynamoDB
            Max Size of table is 400KB
DynamoDB Steams
            changes like create, update and delete is recorded in the steam changelogs then read by lamda
            For CRR must use steams, 24 hrs retention
            VPN endpoints available to access DynamoDB without internet 
S3 (Simple Storage Service)
            Object storage for unstructured data (not a traditional database).
            Features: Scalability, durability, event triggers, and lifecycle management.
            Use cases: Data lakes, backups, media storage.
            DocumentDB
            Managed NoSQL database for document-based workloads (compatible with MongoDB).
            Features: JSON data model, high availability.
            Use cases: Content management systems, cataloging.
Neptune
            Fully managed graph database service.
            Features: Supports Gremlin and SPARQL queries.
            Use cases: Social networks, fraud detection, recommendation engines.
            Keyspaces (for Apache Cassandra)
            Managed NoSQL database for Cassandra workloads.
            Features: Compatibility with Cassandra query language (CQL).
            Use cases: IoT, time-series data, large-scale distributed systems.
QLDB (Quantum Ledger Database)
            Immutable and cryptographically verifiable ledger database.
            Use cases: Financial systems, supply chain, and blockchain-like applications.
Timestream
            Managed time-series database.
            Features: Data retention policies, query optimizations for time-series data.
            Use cases: IoT data, metrics, monitoring.


Interview Questions for AWS Database Services
Amazon RDS
            What are the differences between RDS Read Replicas and Multi-AZ deployments?
            How does Amazon RDS handle backups, and what is the default retention period?
            Explain how RDS integrates with IAM for authentication.
            Can you explain how RDS security features, such as encryption and VPC isolation, work?
            When would you choose RDS Custom over standard RDS?
Amazon Aurora
            What are the key advantages of Amazon Aurora compared to traditional RDS engines?
            How does Aurora Serverless scale with workload?
            What is an Aurora Global Database, and when would you use it?
            How does Amazon Aurora ensure high availability and durability?
            Amazon ElastiCache
            What are the primary differences between Redis and Memcached in ElastiCache?
            How does ElastiCache improve application performance?
            Can you explain the failover process for ElastiCache in a multi-AZ setup?
            When would you choose ElastiCache over RDS or DynamoDB?
General
            What factors would you consider when choosing a database engine in AWS?
            How do you ensure cost optimization when using RDS or Aurora?
            Explain how connection pooling with RDS Proxy benefits database performance.
            What monitoring tools can you use with AWS database services?
